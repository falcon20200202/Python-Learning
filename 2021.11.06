今天学习了使用类和实例、继承
练习题如下：
# case9-1
class Restaurant:
    """餐馆"""
    def __init__(self, restaurant_name, cuisine_type):
        """初始化属性restaurant_name和cuisine_type。"""
        self.restaurant_name = restaurant_name
        self.cuisine_type = cuisine_type

    def describe_restaurant(self):
        """餐馆信息"""
        print(f"{self.restaurant_name} {self.cuisine_type}")

    def open_restaurant(self):
        """正在营业"""
        print(f"The reataurant {self.restaurant_name} is opening.")

restaurant = Restaurant('name', 'type')
print(restaurant.restaurant_name)
print(restaurant.cuisine_type)
restaurant.describe_restaurant()
restaurant.open_restaurant()

# case9-2
restaurant1 = Restaurant('name1', 'type1')
restaurant2 = Restaurant('name2', 'type2')
restaurant3 = Restaurant('name3', 'type3')

restaurant1.describe_restaurant()
restaurant2.describe_restaurant()
restaurant3.describe_restaurant()

# case9-3
class User:
    """用户"""
    def __init__(self, first_name, last_name):
        """初始化属性first_name和last_name。"""
        self.first_name = first_name
        self.last_name = last_name

    def describe_user(self):
        """用户摘要"""
        full_name = f"{self.first_name} {self.last_name}"
        print(f"Full name: {full_name}")

    def greet_user(self):
        """用户问候"""
        print(f"Hello, {self.first_name} {self.last_name}")

user1 = User('first1', 'last1')
user1.describe_user()
user1.greet_user()

user2 = User('first2', 'last2')
user2.describe_user()
user2.greet_user()

# case9-4
class Restaurant:
    """餐馆"""
    def __init__(self, restaurant_name, cuisine_type):
        """初始化属性restaurant_name和cuisine_type。"""
        self.restaurant_name = restaurant_name
        self.cuisine_type = cuisine_type
        self.number_served = 0

    def describe_restaurant(self):
        """餐馆信息"""
        print(f"{self.restaurant_name} {self.cuisine_type}")

    def open_restaurant(self):
        """正在营业"""
        print(f"The reataurant {self.restaurant_name} is opening.")

    def set_number_served(self, value):
        """设置值"""
        self.number_served = value

    def increment_number_served(self, increment_value):
        """增加值"""
        self.number_served += increment_value

restaurant = Restaurant('name', 'type')
print(restaurant.number_served)
restaurant.set_number_served(23)
print(restaurant.number_served)
restaurant.increment_number_served(100)
print(restaurant.number_served)

# case9-5
class User:
    """用户"""
    def __init__(self, first_name, last_name):
        """初始化属性first_name和last_name。"""
        self.first_name = first_name
        self.last_name = last_name
        self.login_attempts = 0

    def describe_user(self):
        """用户摘要"""
        full_name = f"{self.first_name} {self.last_name}"
        print(f"Full name: {full_name}")

    def greet_user(self):
        """用户问候"""
        print(f"Hello, {self.first_name} {self.last_name}")

    def increment_login_attempts(self):
        """属性值加1"""
        self.login_attempts += 1

    def reset_login_attempts(self):
        """属性值重置0"""
        self.login_attempts = 0

user = User('first', 'last')
i = 0
while i < 3:
    user.increment_login_attempts()
    i += 1
print(user.login_attempts)
user.reset_login_attempts()
print(user.login_attempts)

# case9-6
class IceCreamStand(Restaurant):
    """冰激凌小店。"""

    def __init__(self, restaurant_name, cuisine_type):
        """初始化父类的属性"""
        super().__init__(restaurant_name, cuisine_type)
        self.flavors = ['Mango', 'Apple']

    def describe_icecreamstand(self):
        """各种口味。"""
        print(self.flavors)

icecream = IceCreamStand('name', 'type')
icecream.describe_icecreamstand()

# case9-7
class Admin(User):
    """管理员。"""

    def __init__(self, first_name, last_name):
        """初始化父类"""
        super().__init__(first_name, last_name)
        self.privileges = ["can add post", "can delete post", "can ban user"]

    def show_privileges(self):
        """显示"""
        for privilege in self.privileges:
            print(privilege)

admin = Admin('first', 'last')
admin.show_privileges()
